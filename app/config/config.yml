imports:
    - { resource: defaults.yml }
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: nelmio_cors.yml } # Easy overwrite using docker volume if need allow cors

framework:
    secret:          '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: '%kernel.debug%'
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    translator:      { fallback: en }
    templating:      { engines: ['twig'] }
    assets:
        version: 'v=%assets_version%'
    default_locale: '%locale%'
    session:
        name:            packagist
        cookie_lifetime: 3600
        cookie_httponly: true
        save_path: '%session_save_path%'
    trusted_proxies: '%trusted_proxies%'
    trusted_hosts: '%trusted_hosts%'
    http_method_override: true
    fragments: ~
    lock: '%redis_dsn%'
    serializer:
        enabled: true

# Twig Configuration
twig:
    form_themes:
        - 'PackagistWebBundle::forms.html.twig'
    debug:            '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   '%database_driver%'
        host:     '%database_host%'
        dbname:   '%database_name%'
        user:     '%database_user%'
        password: '%database_password%'
        port:     '%database_port%'
        # See https://github.com/sonata-project/SonataAdminBundle/issues/3342
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        auto_mapping: true
        dql:
            datetime_functions:
                date:           Oro\ORM\Query\AST\Functions\SimpleFunction
                time:           Oro\ORM\Query\AST\Functions\SimpleFunction
                timestamp:      Oro\ORM\Query\AST\Functions\SimpleFunction
                convert_tz:     Oro\ORM\Query\AST\Functions\DateTime\ConvertTz
            numeric_functions:
                timestampdiff:  Oro\ORM\Query\AST\Functions\Numeric\TimestampDiff
                dayofyear:      Oro\ORM\Query\AST\Functions\SimpleFunction
                dayofmonth:     Oro\ORM\Query\AST\Functions\SimpleFunction
                dayofweek:      Oro\ORM\Query\AST\Functions\SimpleFunction
                week:           Oro\ORM\Query\AST\Functions\SimpleFunction
                day:            Oro\ORM\Query\AST\Functions\SimpleFunction
                hour:           Oro\ORM\Query\AST\Functions\SimpleFunction
                minute:         Oro\ORM\Query\AST\Functions\SimpleFunction
                month:          Oro\ORM\Query\AST\Functions\SimpleFunction
                quarter:        Oro\ORM\Query\AST\Functions\SimpleFunction
                second:         Oro\ORM\Query\AST\Functions\SimpleFunction
                year:           Oro\ORM\Query\AST\Functions\SimpleFunction
                sign:           Oro\ORM\Query\AST\Functions\Numeric\Sign
                pow:            Oro\ORM\Query\AST\Functions\Numeric\Pow
                round:          Oro\ORM\Query\AST\Functions\Numeric\Round
            string_functions:
                md5:            Oro\ORM\Query\AST\Functions\SimpleFunction
                group_concat:   Oro\ORM\Query\AST\Functions\String\GroupConcat
                concat_ws:      Oro\ORM\Query\AST\Functions\String\ConcatWs
                cast:           Oro\ORM\Query\AST\Functions\Cast
                replace:        Oro\ORM\Query\AST\Functions\String\Replace
                date_format:    Oro\ORM\Query\AST\Functions\String\DateFormat

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: '%redis_dsn%'
            options:
                profile: 2.8
        cache:
            type: predis
            alias: cache
            dsn: '%redis_dsn%'
            options:
                profile: 2.8
    session:
        client: cache
        prefix: 'sess:'
        ttl: 3600

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host:      '%mailer_host%'
    username:  '%mailer_user%'
    password:  '%mailer_password%'
    encryption: '%mailer_encryption%'
    auth_mode: '%mailer_auth_mode%'
    port:      '%mailer_port%'
    spool:     { type: memory }

fos_user:
    db_driver:     orm
    firewall_name: main
    user_class:  Packagist\WebBundle\Entity\User
    use_username_form_type: true
    from_email:
        address:        '%mailer_from_email%'
        sender_name:    '%mailer_from_name%'
    profile:
        form:
            type:  Packagist\WebBundle\Form\Type\ProfileFormType

okvpn_cron:
    tasks:
        -
            command: 'packagist:stats:compile'
            cron:    '0 0 * * *'
        -
            command: 'packagist:update'
            cron:    '*/10 * * * *'
            arguments: {'--update-crawl-interval': '%package_update_interval%' }

    default_policy:
        lock: true
    with_stamps:
        - Packagist\WebBundle\Cron\WorkerStamp

packagist_web:
    archive: true
    archive_options:
        format: zip
        basedir: '%kernel.root_dir%/zipball'
        endpoint: '%packagist_dist_host%'
        # How long to cache archive responses for.
        cache_duration: 1800
